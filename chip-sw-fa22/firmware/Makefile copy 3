# tool macros
CC = riscv64-unknown-elf-gcc
CXX = riscv64-unknown-elf-g++
CP = riscv64-unknown-elf-objcopy
OD = riscv64-unknown-elf-objdump
DG = riscv64-unknown-elf-gdb
SIZE = riscv64-unknown-elf-size

# path macros
BIN_PATH := bin
OBJ_PATH := obj
SRC_PATH := core/src
DBG_PATH := debug
INC_DIR = core/inc/

INCLUDES   = -I$(INC_DIR)

# MCU Settings
#ARCH = rv32imac    rv32imafc
ARCH = rv32i
ABI = ilp32
CODEMODEL = medany
LD_SCRIPT = $(SRC_DIR)/oscibear.ld

ARCHFLAGS = -march=$(ARCH) -mabi=$(ABI) -mcmodel=$(CODEMODEL) -fno-pie
SPECFLAGS = --specs="nano.specs"

# Compiler Flags
CFLAGS  = -g -std=gnu11 -O0 -Wall -Wextra -Warray-bounds -Wno-unused-parameter
CFLAGS += -fno-common -fno-builtin-printf
CFLAGS += $(ARCHFLAGS)
CFLAGS += $(SPECFLAGS)
CFLAGS += $(INCLUDES)

DBGFLAGS := -g
COBJFLAGS := $(CFLAGS) -c

SRC_DIR = core/src/
LD_SCRIPT = $(SRC_DIR)/oscibear.ld
# Linker Flags
LFLAGS  = -static
LFLAGS += -nostartfiles -nostdlib
LFLAGS += -T $(LD_SCRIPT)

# compile macros
TARGET_NAME := firmware
TARGET := $(BIN_PATH)/$(TARGET_NAME)
TARGET_DEBUG := $(DBG_PATH)/$(TARGET_NAME)

# src files & obj files
SRC := $(foreach x, $(SRC_PATH), $(wildcard $(addprefix $(x)/*,.c*)))
OBJ := $(addprefix $(OBJ_PATH)/, $(addsuffix .o, $(notdir $(basename $(SRC)))))
OBJ_DEBUG := $(addprefix $(DBG_PATH)/, $(addsuffix .o, $(notdir $(basename $(SRC)))))

# clean files list
DISTCLEAN_LIST := $(OBJ) \
                  $(OBJ_DEBUG)
CLEAN_LIST := $(TARGET) \
			  $(TARGET_DEBUG) \
			  $(DISTCLEAN_LIST)

# default rule
default: makedir all

# non-phony targets
$(TARGET): $(OBJ)
	@$(CC) $(CFLAGS) $(LFLAGS) $^ -o $@

$(OBJ_PATH)/%.o: $(SRC_PATH)/%.c*
	$(CC) -c $(CFLAGS) -o $@ $<

$(DBG_PATH)/%.o: $(SRC_PATH)/%.c*
	$(CC) $(COBJFLAGS) $(DBGFLAGS) -o $@ $<

$(TARGET_DEBUG): $(OBJ_DEBUG)
	$(CC) $(CFLAGS) $(DBGFLAGS) $(OBJ_DEBUG) -o $@

# phony rules
.PHONY: makedir
makedir:
	@mkdir -p $(BIN_PATH) $(OBJ_PATH) $(DBG_PATH)

.PHONY: all
all: $(TARGET)

.PHONY: debug
debug: $(TARGET_DEBUG)

.PHONY: clean
clean:
	@echo CLEAN $(CLEAN_LIST)
	@rm -f $(CLEAN_LIST)

.PHONY: distclean
distclean:
	@echo CLEAN $(DISTCLEAN_LIST)
	@rm -f $(DISTCLEAN_LIST)
